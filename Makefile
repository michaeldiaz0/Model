
# output binary
BIN := bin/solve.exe

# include files
IDIR=/usr/local/include
LOCALIDIR=include

# source directory
SRCDIR := source

# source files
_SRCS := \
    main.cpp mpidriver.cpp solver.cpp ensemble.cpp initializer.cpp data_initializer.cpp \
   	interpolate.cpp fluxes.cpp pressure.cpp advection.cpp turbulence.cpp damping.cpp boundaries.cpp \
   	pcomm.cpp files.cpp util.cpp Heating.cpp kessler.cpp rutledge.cpp microphysics.cpp energy.cpp \
   	budgets.cpp trajectory.cpp laplacian.cpp process_input.cpp

SRCS = $(patsubst %,$(SRCDIR)/%,$(_SRCS))

# files included in the tarball generated by 'make dist' (e.g. add LICENSE file)
DISTFILES := $(BIN)

# filename of the tar archive generated by 'make dist'
DISTOUTPUT := $(BIN).tar.gz

# intermediate directory for generated object files
OBJDIR := objs
# intermediate directory for generated dependency files
DEPDIR := deps

# object files, auto generated from source files
OBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(SRCS)))
# dependency files, auto generated from source files
DEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(SRCS)))

# compilers (at least gcc and clang) don't create the subdirectories automatically
$(shell mkdir -p $(dir $(OBJS)) >/dev/null)
$(shell mkdir -p $(dir $(DEPS)) >/dev/null)

# C++ compiler
CXX := mpicc
# linker
LD := ld
# tar
TAR := tar
# -Wall -Wextra
# C/C++ flags
CPPFLAGS := -g -O3 -I $(IDIR) -I $(LOCALIDIR) 
# linker flags: libraries to link (e.g. -lfoo)
LDLIBS := -lnetcdf -lmpi -lfftw3 -lm
# flags required for dependency generation; passed to compilers
DEPFLAGS = -MT $@ -MD -MP -MF $(DEPDIR)/$*.Td

# compile C source files
COMPILE.c = $(CC) $(DEPFLAGS) $(CFLAGS) $(CPPFLAGS) -c -o $@
# compile C++ source files
COMPILE.cc = $(CXX) $(DEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) -c -o $@
# link object files to binary
LINK.o = $(LD) $(LDFLAGS) $(LDLIBS) -o $@
# precompile step
PRECOMPILE =
# postcompile step
POSTCOMPILE = mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d

all: $(BIN)

dist: $(DISTFILES)
	$(TAR) -cvzf $(DISTOUTPUT) $^

.PHONY: clean
clean:
	$(RM) -r $(OBJDIR) $(DEPDIR)

.PHONY: distclean
distclean: clean
	$(RM) $(BIN) $(DISTOUTPUT)

.PHONY: check
check:
	python sample_initializations.py
	mpirun -np 4 ./bin/solve.exe -f input_params_rainball.txt

.PHONY: help
help:
	@echo available targets: all dist clean distclean check

$(BIN): $(OBJS)
	$(LINK.o) $^

$(OBJDIR)/%.o: %.cpp
$(OBJDIR)/%.o: %.cpp $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE)

.PRECIOUS: $(DEPDIR)/%.d
$(DEPDIR)/%.d: ;

-include $(DEPS)